[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,showJumps=`true`
---

# The Root Topic
> mmd.emoticon=`tree`


## 40 训练集面

### SFT（有监督微调）的数据集格式

#### 一问一答

### RM（奖励模型）的数据格式？

#### 一个问题 \+ 一条好回答样例 \+ 一条差回答样例

#### 数据准备

##### 数据来源

###### 同一问题（prompt）对应的多个候选答案（response）

####### 标注不同答案的排序关系（例如答案A \> 答案B）‌

##### 数据预处理

###### 需去重、过滤噪声和低质量样本，确保数据集的代表性和一致性‌

##### 数据格式

###### 包含三元组：\(问题x，高质量答案yw，低质量答案yl\)，其中yw的排序高于yl‌

#### 模型架构设计

##### 基础模型选择

###### 基于预训练语言模型（如ChatGLM2\-6B、LLaMA等），移除最后一层softmax

###### 替换为线性层以   输出标量分数‌

####### 参数规模一般为6B左右的小模型，<br/><br/>以平衡训练稳定性和计算成本‌

##### ‌输入输出结构

###### 输入：

####### 问题与答案拼接后的文本   （例如\[CLS\]问题\[SEP\]答案\[SEP\]）‌

###### 输出：

####### 标量奖励值（reward score），数值越高表示答案质量越好‌

#### 损失函数与训练策略

##### 损失函数

######  
> mmd.image=`iVBORw0KGgoAAAANSUhEUgAAAV4AAAAhCAYAAACRKMO6AAAQEElEQVR4Xu2dh5MUxRfH/VMoghJUVEQxACYEFSPBhBFFyUnBQClCmShJYhYQE5IRBQUlKjlKVhBRUKJZQRClf79PH299+65nb3YP9g7tT9UUdz2zuzPdr78vdO9xgotEUrJx40Y3fvx4N3r0aDd16lR34MABe0kkEknBCbYhEolEIseWKLyRSCRSZKLwRiKRSJGJwhuJRCJFJgpvJBKJFJkovJFIJFJkovBGIpFIkUklvIcOHXIffvih++677+ypCmfx4sXujTfecKNGjXKrVq2ypyORSKTSkUp4EbRatWq5L7/80p6qML7//nt3+eWXu5NOOsldf/317tRTT3V169b1IlxZePDBB12XLl1KHe+++669NBKJ/IdIJbxDhgxxp5xyivvjjz/sqWMO35Sy/PTTT+6cc85x99xzjzt8+HCm/eyzz/btlYWLLrrINWjQwN15553ujjvuyBxjxoyxl/4nGTRokOvRo4fr3Lmz6927t29bsGCBu/XWW92jjz6afXEl4JNPPrFN5eL99993f//9t22uMI6HjHHcuHG26ZhDpv/777/bZvfee+/ZJq+RnTp18jbdq1cvt3LlSnuJJ5Xwtm7d2h/Fhps/ePCgbfYT87LLLssSXejTp48X37feesutW7cu61xFgPA2b97cNkeOgE0999xz3qj37dvn2xjvq6++2vXv399cXXHg6J9++mnbXC569uzp9u/fb5srlB9//NHfV2WFbNHO+WIxffp0f2gYvzZt2mS1cX/YM1+nb9asmfvggw+yzgtlCi8KfsYZZ7gRI0bYUxnSGBDvkyti5j20yLZo0cL99ttv6ooSENTatWsHvfMrr7ySiXg7duzovvnmG3NFcUF4r7jiCtscOQLC+/LLL9tm1759+0ojvNjsNddcY5uDhIKEEHfddZfbvXu3ba4UMGe6detmm48Zaf/exwUXXFBhois88cQTbunSpVlt6FZScEVwWLDwfvbZZ17o+AMpmoULF7ozzzzTizJHvXr13GmnneZ++OGHrOtIrTl3+umn++vq16/vF+uANItUnHY5T/mAiPWZZ57Jeh+hbdu2vrYb4t5773UNGzb0P2/fvt1deOGF5oriEoU3N0nCyzgWS3gfeOABb5PYKAc2LT8zce6+++7EEkO/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`


######  
> mmd.image=`iVBORw0KGgoAAAANSUhEUgAAAV4AAAAbCAYAAAA0yedxAAAVuklEQVR4Xu3c9ZMtRdIGYP4KIvgRd3d3X9xZ3CFwZ5fFWdzd3d3d3R12sYu7LO70fk9F5Imcun3mzrWBu1+/ERVzuk9LVWXmm1J1ZqKmw3jFd9991/zyyy/16THCjz/+2Pz000/16Q4dOkxgmKg+0aFDhw4dxi864u3QoUOHYUZHvB06dOgwzOiIt0OHDh2GGR3xdujQocMwoyPeDh3+R3DyySc3xx57bK8dc8wxzY033tg888wzze+//15f3uEPxDgh3l9//XXA8bffftu8/PLLnbDHET7//PPmt99+q083X375ZfP999/Xp/9UqLe/ff31182///3vAef+SPzwww/NV199VZ9uPv30096c++t4bGE74M8//1yfHif44IMPmtlnn72Za665mvnmm6+0OeaYo5l11llLm3POOZvXXnttwD213f7nP/9pXnnllQHn+qHNto2t7TzYUlm/75NPPinbLWuY6y+++KI+3Qr61GYDnms8/eC7tnePDowny5MuGdNQMNbE+/HHHzezzDJL8+STT/bOPfbYY0Xw/9/B+Rx88MHNoYceOmg75JBDBgiM8h522GFFsBSWMX322WflePPNN++R2aKLLto89NBDvfv+bBgxYkQx+A8//LB37q677moWXnjhvgY63Ljuuuua3XffvT5d5jyMn2yMI+/HZnB33nlnc88997Q240S0Gfvvv39z6aWXDjg3rnD22Wc3M8wwQ4lwzS1nQV+Qy6abbtoj31dffbVc/+abbzYzzzzzACd4yy23NIsvvnjvuB88f7nllit2HjAf8847b/Pee++VY8HCAw880Pt+hx12aE499dTeMSyzzDLNNddcM+AcbLXVVs0///nP+nQPzz//fM9ettxyyzJ2uP7665u33nqrfGZT3tkP22+/fXPuueeWz++//36RVy3D3B555JHqCU2z0047Nbvsskvv2HzMPffcI8m9DWNNvHD//fc3008/fXPDDTeU45tvvrlZcMEFq6tGH1dffXUhmj8anMtqq602qAe9/fbbmw022GDAOcpNKQi4rV1yySXNUkst1UwzzTQDohFGs+aaaza77bZbUXIG491HHnlkUVYEgMxEOOMrghpXoBP6GY6ZoS2yyCKjJF5Rz/LLL9+svvrqI7U99thjpCh16623blZdddXm7rvvHnA+wFmts846peXsIRMvw11sscUK+egzx+azv459p5144olFBmeeeWZzxBFHlHPnnXdec8EFF5Q+I9izzjqrEJ/3XXHFFeX5++2333ghXnO5/vrrN9NNN13z0Ucf1V8XXHnllYVoF1hggZ4DcY7dsl+gk0svvXS+rS9ci+gfffTRckwPOat33323HD/88MNFzgFEd8opp/SOn3rqqTKv5ogur7jiikW2a6yxRnkOPc8yX2mllZp//etf5V62Nv/88xeCC+J9/fXXi4xE/sB+Yt7bkImXTpLb+eef35xzzjkDmmuQ+AorrDBAZ41PRmFM3h927roTTjihd06jC5dddtmA+0dJvBT88ssvL/WiXD/SEEF4Ht4fUVBqAl1iiSWqJ40+DMoE/9GgTFNMMcWg6eZVV11VIrmhgrAZrDlD7DUo5MUXX1yERRFdg3DCm1IKynLHHXeUSCXaG2+8UT1p7OB5Rx11VPPCCy+UlE4Erx+jk6ZRPvoCF110UYmWRkW8jHGqqaYq7+agohm3+2eaaabm6aef7l3/l7/8pUR1DLft2SJBmZmoLBPvbbfd1vztb38rn6WKshRRICNGKlJvWYVjc+D7HMFzmGuttVbvWKDw+OOP947XW2+9Yg8wPolXoLPsssvWXw0AMkMWQU5gTg844IDymUNZZZVVet+NCnvttVchcqiJV4RIvwOZeM2/gOPBBx8sxyLFm266qTR98R25xDmNA8/lB/VsOig65vAEaffdd1/5jp6SF/vJtuH7F198sRA3h6j/nu26bbbZpvfsGnRg5ZVX7umVCNk87rnnnuXd0ThhfJXPRbv22msHEi9P0wYTuPHGGzeTTz55M/XUU5eB5HqRYy+nnM8991xRSh2UBhx44IFFCXgo3+X27LPPDrl+MyEhE68JplQEhBxyOicF45REZ+YCpH+MOVIzSkSoCEEzzzvvvHOzzz77FNJDyoyd8myyySaluQYRU9hxCe+fdtppC3EhuxlnnLGZbbbZRqrd1lAaCZm/9NJLpVH6f/zjHyW6qfVCozvID8wH3XO+DUhECxKN6Fjf1P0yXOOdoiapIDAGEVvotchPSu5efedg3nnnneJspa9SX86vjrR9t/baa/eORWDZIQwH8Ypy2eRg6TkgF3ryxBNPDJANZ2LupeYiRXZcy4au1vNKzyPCHh3ivffee4ssyEWGIhIPuW+00UbNhRde2LuvhvkWrOy9996FOJE0W/j73/9ebAYPke2SSy5Z5Mk2kCYZu+akk04qesMBL7TQQiWj0S8Oh92JknMju+OPP75HvMbLyXE4nMStt97aazIgz8znNMFRjYkYbw0TTxE9PCsKpXP+8MMPL8fSRwJ3XW6UmYLX5zX3S+kCvBPiIXyKnsEA6gUBC3cIHZkRFgON+0SDsTig1lQ/02fnog6V4V7v8v3bb7894DtK5Xyu8VEa6Y3zhCGCzcQr8uJlpR3ICnEBBRadgbFvuOGGJeUidGQMlJchICoeXaRGgIzEeYY95ZRTFmIPcHTh8ccVEDwFnmeeeQqxSQ+hJl3XiaJyJEjG6vy1/BGj59XnRQqIXXkGgnjDOdVQHvD86IsomOHROzW5jG+++aYQztFHH130NUe85pdDC2y77baFMBB13aTOUZbgQBiv5tn5sz74rH4veBnfxCuNpSOjkv8WW2xR+ocg2mTQTzaacpjIny3Qey3qqTBU4kXeZMCG2TJbkKKbo9NPP730D7+cccYZJUWvdc09HAHbMG593nfffcvODbZhwdl7o+4L7DA7R9hxxx17BK/cRJeUazhKjb4jY5+VGSMT0F9y5ORwp4AommzH/OVzGr2sF8dbiVedR0cMsgbli9pMP/BAkVrWIMQgIdGfidbZWIU1yOikyeOdAogeibmeYlM2Be7tttuufE8ZCFVNxrM8kzdVJuEdKYb7PINQA8jadQwm+sEjB9EiOM5Ef4EymAPvcj3hq+2EoiFekUOMk5K4hvelIEhC1O9+4wXpT3wGioy8EUMYBYX0bMI3hiAYsjAuxDwuIZUzZwixdkYBkb3IkUzMkahzMHBObeRD10QlI0aMKMeDEa8AwLtyTd2cMggROgPK4LQYEAPPxGveRC90I0CfZA2xsJkbcsjXArmpLweQm4gyoC+yIRhfxLvuuusWfciOr4Yxm3vy7Lf4I/oTALSBTahrsgU6H844MFTiFah4FjmQd+g8WxeEsHflJWXMfhwESgTeR98i2yMztXa2kuUkA6/llmu8ygBZhkAP2iLviMw5Xg7MeKOxR2MW2OXzbYHeSMTLi4hK1VDagHAYeb//uEXAJlU6USPqlbEIx3Ai2ogwPgQMmXijjsW7eYdGwRlgrF4iXpPuOBwDz+nccccd1zM43irqYa5DbAcddFD57D0iJEoqrYeaeHkxRBvbZxCU8kHUtWviBc+k8IgESQDljLpPJl7jp9innXZa6ZM5E1HyuvqNwI1RTQ5EEcY41K0sQ4W+kodUqw0iCZGqKMM4GL5+5NXuDBGSBaBcYwxwRAwxR7xKHOQQi1rRzIf35jqzOaUbiBsJyZYCMgkOoiZeEZJjaSS9BrKNklrdjI3BBYyZfoqYAqKevAKuj7EAKjUd18Qb9UzzVEdVGTJE80Ivc60xEI4PMdZg64Kc2EHjfnMnzQ8MlXhBn82LfseCmXfUu3SMqSZei8xsj5PwnFhcM68CJ7xlTSrXu2Ur2RZBsIZY6ZuSguvZE12P0oKgJ461nFHQA42jiuZ+HCX7zedlf/Wcj0S8vCcBMKYaJst3Bt0v4qWEhCQq1HFeIeDlFD2iGMRLcbOhqtEEwWXiFYV4bi0Iz8jES5hhvCA9Rh65PiVyUYuBqF3WOxZ4QYrqvpp4KVhtQBZ9YhW3jXgpPgJQ76EIMgI1p0AmXs6CYoOVVnNqPhlWpHcWRUQIwAF5dz+ZjCk4KPLOKWWAEzEndQ12sKjJuGRT5kekkhWZviG2WGhEvMopMhNzFvPGuPLWxQDiDSdO+W0PAs+jc/pLRkG8ISPb9kTJjNDxrrvu2neLnt06OXISmdURZE281kAs3lhUpHP0alyCbMiB0xkMaqKuk321wdyYWzqUo3RAimwkL9yy0zEl3pj7vL3M8wQbyJR89INOs78ItAB3IEHPoBPkFvoZJO5eNs/54gufs7MnA32T5bJxwSbiVf9VGtSCeONYq4kXyXtnNPrBebD1fF6rS6YjEa8beZQ2MHBppZSpH3RYTQOkvqJnigcmlQCDVBibdHrSSSct0Q0ioQCBTLzKBbnsEJBG5FID5cq7BBAvhcoeh4cL4pW+t+3AkFpbVUe6mXg9W1/zyjUwsNhCF4olInSv/rmHkiANJCH9UHfSD+cQRRCvcoSFNuSK+JCyYy2cFkUKhyG9lZqNS1B0hkVp6w3qxmfxiTHVYCxBejXIL1bQbWEyJ5kgzXFE7f0W10Q45Fkv0Gbilamo1YLsio7rcxCvz3RF5oZgom4rsJBi0lk1TdG58fus0X0EBsodxpPr7EDm0uBYdGKEnIxaL12tA4exBSenj/2yDJACIxiLTW1AVPSQIwHZgbEbB7BTxzmgqYlXYKAfsfNnMOJVyyUvOkz+AiHkh7jNcTSOOD6bf9fSE89GgkoRokyOkm34G3bOtryHvbguMnTnZUtkp+YPghtyz+CA2V8/cMDkqlYcjW5w4vlcNLLPHDRRLOhApN39tpRQZorbb1sVZkcGOV1BshQZUVE638cm7gAj4lHUWUw2o4ZMvLyjCatDdkYTBBDEm/cyBvHmNCwTr/fW30MsYBF0Jl5KSBFi72OAItTEyzNT2Bwl5VIDKHEgeKWQqI+KXpCpuRJB+YxwLHTlWpSSA5kg55oAxhaiBcZa10vBXBmrCJbBR1MiMU9tv0xDEPQgl0PIwRzTGzJzb2Ra/Wq8+hU1vawLmXi939ypx3FmUfYK4gUGwjClgfkHFIg4anLINTtlepsXhoHj0+dojmWNMiL3O9YPzku5qdbfsUXsaGnLUIEeIzS6028LILnRoRyw2G1Az0WT5pzsso5l4hXlGptnxK6PfsRrPsgckcpgBWpB+JAdU94HHECwbILNshdRKfugp/Qn7BiZ4w7BXM4GwmHLkqPGK7PDOQJL4+aoZNICTJ+dq/WQfta7PGRkQ/3l30j7eCkaQdYRhWgNieQV4AweT02mLlJDbHEiOFvTQrFNHE+XIVoJZ5CJl7clrHpgvq9LDaNDvIzJuOqJtWUlrqlLDRbe6nlwXC+uRcQA0lGNIDPxAjKqF9ekMXl/KKMxDmMMMBgEQ3lrxxGgHGPyIwtEypByyhngeBmz9MxYojGUtl/uiDbMZdt2p8gckCVSjOi6H/GClI6Dztt0MvECPWbo+hlklyPeSD3zDyjoqewsmmwIYdGXfD62/Ukf2Urd6Ep9LlroUAYZ1av3Q4G58kxzm+UvgKJTnAvnSU6xKFQjdhlElpohegc2wvZy34N4EZxIWhlCP0LX+hEv1IFXgN7QuSiH4BNETq9yydLuJPLPxGdBXWSZoewlq+EUauTFNVvYlB/YHwJH7LnJyoPXjIHN1bV/8+MzLoktl/kaUXcuBY5EvFLBuFCRmHJTag9qSy0DlJfC1fscM0aMGFG8aHheobk6C4JF9BScEsSE1LsapGsMSZ9Mvu+8c2yIF3g3Cqwoz+sbpzlg4FATr5THOKQnogEK7vp+i2u8PGGEUcaiWEZNvBGpqIkiib/+9a+9jf4BTst7KWbbYicjUDeLbWCjAxG497f9EgrxKElFrTSILfYaZ/iOgxUhD+YAGFuulw5GvBTYXOcIqyZeNTjf543xQbxZFzLxcjZRTxblMDjPoA9xXsvljxh/bqLQWECuv6uBcMmorW49KsgskQCdMq5o2QHk3TttEC2SzWDrA7JWdpp1zFx5twxZlGrNQlYWGIx4a8R8Iv8gOHMVi2scPTlEnRSRCn6M0TwrCdQ/dWaXMRdtRJ+Jl97hE5k+B1LLiy7kftXfKyW6V8Bo3cbz4p31tYGRiBfUC6W/anCYXOcHqyExOGlD1G77gTETVEBnpKCIkZERlCguOqm8kK+nHDyftIfQpZC8VdR4DVZEnbfViKh4oWxsohaOJOC5BEhQ0iCpYq5nSaXMRy6xeJdIwi/aeHz3Uw7Qf8SbIzIEofWr8SlVZOINiCj0X3/9OjBgk3jU4cwfwdfCZZjG1C/aGQyx+NBG6AjMHGUgEO/KETmI2vWzPl+DE861OM5u4okn7us0GArdjN/KM9JcMkDYk0wyyYA5s0vEPf2IN4NOSx1FleaidiiDYbPNNitb2IaCEf8XjJBtW1Q2KpADfaWb0eggkuC4++lagINwvT4MBvNTr4OQP7ITRIk8kXx2SP2IV+nC/CgV0Vv9F1VaUzEPeTeKgCLGIO2v16MENOQuqMk1Wv1RlnROHZdjq38jEKUG/BNrWmyoLdAwlrZMnlOj8+QAHLV1rVjw9Ny2XSLQSrwBUWhdx8hQMkAwor968zYD4pVEk+osvIFJRr5jAqQn9as9M7LyU70/Exi2sSMcTmIojSPJiiWaNXeUSson+kaEIiOFekYW9UZpJeWS+sVWPLCBvy2FHFtQ1vr/LSAm5ZmAkpD9xnSjLg8hM4YXukFBEWJdPx0OZOIVOMgqYttYOCz9ZajSVg7CQqqaoDloa2RJHvV5DVHEYjMwXlHncIITJBv9tJCbwYH6jlw0zofdygYzkHXsBEKcgpDs0MxR/r8PQbyCIusqoshcM0bkvqe/7FxdFqlFBiRbkinSOX22+EVnlK8c0yXEZ4HNfd4XkSb5siPcIwvFF+TgM+cQmSmOEkC2tSBe2S6nzBY9N+9v9/4ok3hv7PCSHbo27ygZlHhHBcVo6X6/SJcnED1Hi99mjwkoBC9i8hgEApZiILfBovE/CvGLuqE2YyE4oMQ+57pWIP7zW72rAjkoR0RqzghEJP0ixrGBqITiMSAGhqTUmbNTVDqhG20RhL6JRLJu5J/ZDicYR/wPDMToH9zUW38CSEF2JdMyB7UMh9pyOQ6xDbf+Ig/vbdsmCBYdQy4WvmpyzhDhkf2oomslTFvqRgWpvpIF4qzXf0Cmh1gRbr1vXR+UEG0RrBF7cWWIFuQQOx7Je/6Ra9vGAeOP/dvIP/+PmgxBaNt2PUGT+3Mdf6yId7gh7WYcyhKTTTZZ8VqDbfmYEFGXC/6skEorI4gSEPCEjgll3jv8OTG6+jNBEW+HDh06/C+gI94OHTp0GGZ0xNuhQ4cOw4z/AgKSDwOkl0YgAAAAAElFTkSuQmCC`


##### 训练参数

### PPO（强化学习）的数据格式？

#### 不需要新增数据。需要提供一些prompt，可以直接用sft阶段的问。另外，需要限制<br/>模型不要偏离原模型太远（ptx loss），也可以直接用sft的数据。

### 找数据集哪里找？

#### 推荐Alpaca\-COT，数据集整理的非常全，眼花缭乱。

#### CoT微调数据集：Alpaca\-CoT 里面包括常用的alpaca，CoT等数据集，有中文的。

### 微调需要多少条数据？

#### 取决于预训练数据  和  微调任务的数据分布是否一致

##### 分布一致，100条就够

##### 分布差异大就需要多<br/>些数据，千条或者万条以上为佳。

#### 自己的任务复杂或者下游任务行业比较冷门

##### 如药品名称识别任务，则需要较多监督数据

##### 还有微调大模型时，一遍是记不住的。<br/>100条的微调数据，epochs=20才能稳定拟合任务要求。

### 有哪些大模型的训练集？

#### 预训练数据集togethercomputer/RedPajama\-Data\-1T「红睡衣」开源计划

##### 高质量、大规模、高覆盖度的预训练数据集；

##### 在预训练数据集上训练出的基础模型；

##### • 指令调优数据集和模型，比基本模型更安全、可靠。

#### 预训练数据集RedPajama\-Data\-1T已开源，包括七个子集

#### 经过预处理后得到的token数量大致可<br/>以匹配Meta在原始LLaMA论文中报告的数量，并且数据预处理相关脚本也已开源。

#### 完整的RedPajama\-Data\-1T数据集需要的存储容量为压缩后3TB，解压后5TB。

### 进行领域大模型预训练应用哪些数据集比较好？

#### 现有的开源大模型进行预训练的过程中会加入数据、论文等数据。

##### 因为这些数<br/>据的数据质量较高，领域相关性比较强，知识覆盖率（密度）较大，<br/>可以让模型更适应考试

##### 时领域相关的网站内容、新闻内容也是比较重<br/>要的数据。

### 如何选取和构建大模型微调数据？

#### 1\. 数据的多样性：

##### 多样性即为数据的去重，去重这件事的核心是相似度度量

##### 现在的相似度度量方法大家用的比较多<br/>的是基于对比学习构造的语义向量这套思路，<br/>当然简单的基于词袋或者tfidf的方案也是可以的

##### 核心的相似度度量方法后，我们可以使用简单的onepass聚类方法进行过滤，

###### 使用带优化目标的聚类：比如K\-Center\-Greedy算法，<br/>其约束条件是在最大化多样性<br/>的情况下，使指令数据集最小。

##### 如果我们已经有了一批已经去重的人工处理过的高质量数据，<br/>如何寻找与这批数据不一样的数据呢？

###### 简单地把已有的数据全部当成正样本打上1，然后待筛选的数据全部当成负样本打上0

###### 使用deberta等构建二分类模型，并进行K\-fold的交叉验证，在交叉验证过程中，选出每一个fold过程<br/>中的测试集合里概率接近于0的样本。

###### 就能把长得与已有数据不一样的数据给选出来了，

#### 2\. 数据的不确定性。

##### 有了质量打分模型后，我们就可以判断一些指令数据的质量高低，<br/>并且据此选出模型真正不确定的数据。

##### 手动的拒绝采样，核心是选择“模型不确定”\+“数据质量达标”的那部分数据。
