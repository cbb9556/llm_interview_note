[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,showJumps=`true`
---

# 推理优化
> mmd.emoticon=`tree`


## 12 多轮对话中让AI<br/>保持长期记忆的8种优化方式篇

### 结合 LangChain 中的代<br/>码，8 种不同的记忆维护方式在不同场景中的应用。

#### 是 langchain中定义的 东西

### Agent 如何获取上下文对话信息？

#### 2\.1 获取全量历史对话

##### 以一般客服场景为例

###### 在电信公司的客服聊天机器人场景中，如果用户在对话中先是询问了账单问题，接着又谈到了网络连接问<br/>题

###### ConversationBufferMemory 可以用来记住整个与用户的对话历史，

###### 可以帮助 AI 在回答网络问题时还<br/>记得账单问题的相关细节，从而提供更连贯的服务。

#### 2\.2 滑动窗口获取最近部分对话内容

##### ConversationBufferWindowMemory 可以帮助 AI 只专注于最近的一两个问题（如配送方式），而不<br/>是整个对话历史，以提供更快速和专注的答复。

#### 2\.3 获取历史对话中实体信息

##### ConversationEntityMemory 可以帮助 AI 记住这些关键<br/>实体和实体关系细节，从而在整个对话过程中提供更准确、更个性化的法律建议。

#### 2\.4 利用知识图谱获取历史对话中的实体及其联系

##### ConversationKGMemory 可以构建一个包含病人症状、疾病历史和可能的健康关联的知识图<br/>谱，从而帮助 AI 提供更全面和深入的医疗建议

#### 2\.5 对历史对话进行阶段性总结摘要

##### ConversationSummaryMemory 可以帮助 AI 总结之前的辅导内容和学生的疑问点，以便在随<br/>后的辅导中提供更针对性的解释和练习

#### 2\.6 需要获取最新对话，又要兼顾较早历史对话

##### ConversationSummaryBufferMemory 可以帮助 AI 保留最近几次交互的详细信息，同时提供历史问<br/>题处理的摘要，以便于更有效地识别和解决问题。

#### 2\.7 回溯最近和最关键的对话信息

##### ConversationTokenBufferMemory 可以帮助 AI 聚焦于<br/>最近和最关键的几个问题，同时避免由于记忆过多而导致的信息混淆。

#### 2\.8 基于向量检索对话信息

##### VectorStoreRetrieverMemory 能够快速从大量历史新闻数据中检索出与当前问题最相关的信息，<br/>即使这些信息在整个对话历史中不是最新的，也能提供及时准确的背景信息和详细报道。
